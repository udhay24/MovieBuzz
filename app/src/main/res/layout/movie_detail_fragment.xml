<?xml version="1.0" encoding="utf-8"?>

    <androidx.coordinatorlayout.widget.CoordinatorLayout
            xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:app="http://schemas.android.com/apk/res-auto"
            xmlns:tools="http://schemas.android.com/tools"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            tools:context=".ui.moviedetail.MovieDetailFragment"
            >

        <!--<com.google.android.material.appbar.AppBarLayout-->
        <!--android:layout_height="wrap_content"-->
        <!--android:layout_width="match_parent"-->
        <!--&gt;-->
        <!--<androidx.appcompat.widget.Toolbar-->
        <!--android:id="@+id/tool_bar"-->
        <!--android:layout_height="?attr/actionBarSize"-->
        <!--android:layout_width="match_parent"-->
        <!--app:layout_scrollFlags="scroll"-->
        <!--/>-->
        <!---->
        <!--</com.google.android.material.appbar.AppBarLayout>-->

        <androidx.core.widget.NestedScrollView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior"
                >

            <androidx.constraintlayout.widget.ConstraintLayout
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    >

                <ImageView
                        android:layout_width="wrap_content"
                        android:layout_height="200dp"
                        android:id="@+id/background_image"
                        android:scaleType="centerCrop"
                        tools:targetApi="m"
                        app:layout_constraintEnd_toEndOf="parent"
                        app:layout_constraintStart_toStartOf="parent"
                        app:layout_constraintTop_toTopOf="parent"
                        tools:srcCompat="@tools:sample/backgrounds/scenic[7]"
                        />

                <androidx.constraintlayout.widget.ConstraintLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:layout_constraintStart_toStartOf="@+id/background_image"
                        android:id="@+id/constraintLayout"
                        app:layout_constraintEnd_toEndOf="parent"
                        app:layout_constraintHorizontal_bias="1.0"
                        android:layout_marginTop="8dp"
                        app:layout_constraintTop_toBottomOf="@+id/space"
                        android:background="@drawable/fade_image_gradient"
                        >

                    <ImageView
                            android:layout_width="120dp"
                            android:layout_height="140dp"
                            tools:src="@tools:sample/avatars"
                            android:id="@+id/movie_poster_image"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintTop_toTopOf="parent"
                            android:layout_marginStart="24dp"
                            android:layout_marginTop="32dp"
                            />

                    <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:id="@+id/movie_title"
                            tools:text="Spider-Man: Into the spider-verse"
                            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                            app:layout_constraintTop_toTopOf="@+id/movie_poster_image"
                            android:layout_marginStart="16dp"
                            app:layout_constraintStart_toEndOf="@+id/movie_poster_image"
                            app:layout_constraintEnd_toEndOf="parent"
                            android:layout_marginEnd="32dp"
                            app:layout_constraintHorizontal_bias="0.0"
                            />

                    <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:id="@+id/rating_text_view"
                            app:layout_constraintStart_toStartOf="@+id/movie_title"
                            android:layout_marginTop="8dp"
                            app:layout_constraintTop_toBottomOf="@+id/movie_title"
                            tools:text="4.5"
                            android:drawableEnd="@drawable/ic_star"
                            android:drawablePadding="4dp"
                            android:gravity="center"
                            />

                    <TextView
                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"
                            android:id="@+id/running_time_text_view"
                            app:layout_constraintStart_toEndOf="@+id/rating_text_view"
                            android:layout_marginStart="16dp"
                            tools:text="79 mins"
                            app:layout_constraintBottom_toBottomOf="@+id/rating_text_view"
                            app:layout_constraintTop_toTopOf="@+id/rating_text_view"
                            />
                </androidx.constraintlayout.widget.ConstraintLayout>

                <TextView
                        android:id="@+id/description"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="CollapsingToolbarLayout is a wrapper for Toolbar which implements a collapsing app bar. It is designed to be used as a direct child of a AppBarLayout. CollapsingToolbarLayout contains the following features: Collapsing title. A title which is larger when the layout is fully visible but collapses and becomes smaller as the layout is scrolled off screen. You can set the title to display via setTitle(CharSequence). The title appearance can be tweaked via the collapsedTextAppearance and expandedTextAppearance attributes. Content scrim A full-bleed scrim which is show or hidden when the scroll position has hit a certain threshold. You can change this via setContentScrim(Drawable). Status bar scrim A scrim which is show or hidden behind the status bar when the scroll position has hit a certain threshold. You can change this via setStatusBarScrim(Drawable). This only works on LOLLIPOP devices when we set to fit system windows. Parallax scrolling children Child views can opt to be scrolled within this layout in a parallax fashion. See COLLAPSE_MODE_PARALLAX and setParallaxMultiplier(float).
                Pinned position children Child views can opt to be pinned in space globally. This is useful when implementing a collapsing as it allows the Toolbar to be fixed in place even though this layout is moving. See COLLAPSE_MODE_PIN. Do not manually add views to the Toolbar at run time. We will add a 'dummy view' to the Toolbar which allows us to work out the available space for the title. This can interfere with any views which you add.SummaryNested classes class CollapsingToolbarLayout.LayoutParams XML attributes exitUntilCollapsed — the name of this flag says for itself. On scroll down, CollapsingToolbarLayout hides only till collapsed state, which is based on the min height. So, in our case it’s Toolbar’s height. This way, it will always be visible and when scrolled all the way up — will expand the flexible area beneath it (in our case — ImageView). This flag probably the most common and suitable for a Details view, with ImageView and CardViews below. Again, you need to add app:layout_collapseMode=pin
                 on the Toolbar, so the action items are shown on scroll.exitUntilCollapsed — the name of this flag says for itself. On scroll down, CollapsingToolbarLayout hides only till collapsed state, which is based on the min height. So, in our case it’s Toolbar’s height. This way, it will always be visible and when scrolled all the way up — will expand the flexible area beneath it (in our case — ImageView).

This flag is probably the most common and suitable for a Details view, with ImageView and CardViews below. Again, you need to add app:layout_collapseMode=pin on the Toolbar, so the action items are shown on scroll.
exitUntilCollapsed — the name of this flag says for itself. On scroll down, CollapsingToolbarLayout hides only till collapsed state, which is based on the min height. So, in our case it’s Toolbar’s height. This way, it will always be visible and when scrolled all the way up — will expand the flexible area beneath it (in our case — ImageView).

This flag is probably the most common and suitable for a Details view, with ImageView and CardViews below. Again, you need to add app:layout_collapseMode=pin on the Toolbar, so the action items are shown on scroll."
                        android:maxLines="3"
                        android:ellipsize="end"
                        app:layout_constraintEnd_toEndOf="parent"
                        app:layout_constraintStart_toStartOf="parent"
                        app:layout_constraintBottom_toBottomOf="parent"
                        app:layout_constraintTop_toBottomOf="@+id/constraintLayout"
                        />

                <Space
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        app:layout_constraintBottom_toBottomOf="@+id/background_image"
                        android:layout_marginTop="8dp"
                        app:layout_constraintTop_toTopOf="@+id/background_image"
                        app:layout_constraintStart_toStartOf="parent"
                        app:layout_constraintEnd_toEndOf="parent"
                        android:id="@+id/space"
                        />
            </androidx.constraintlayout.widget.ConstraintLayout>
        </androidx.core.widget.NestedScrollView>
    </androidx.coordinatorlayout.widget.CoordinatorLayout>